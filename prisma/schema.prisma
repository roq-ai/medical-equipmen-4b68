generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model customer {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name     String   @db.VarChar(255)
  last_name      String   @db.VarChar(255)
  contact_number String   @db.VarChar(255)
  email_address  String   @db.VarChar(255)
  address        String   @db.VarChar(255)
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
}

model equipment {
  id            String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String      @db.VarChar(255)
  manufacturer  String      @db.VarChar(255)
  model_number  String      @db.VarChar(255)
  serial_number String      @db.VarChar(255)
  hospital_id   String      @db.Uuid
  created_at    DateTime    @default(now()) @db.Timestamp(6)
  updated_at    DateTime    @default(now()) @db.Timestamp(6)
  hospital      hospital    @relation(fields: [hospital_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  inventory     inventory[]
}

model hospital {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?     @db.VarChar(255)
  address     String?     @db.VarChar(255)
  city        String?     @db.VarChar(255)
  state       String?     @db.VarChar(255)
  zip_code    String?     @db.VarChar(255)
  name        String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  user_id     String      @db.Uuid
  tenant_id   String      @db.VarChar(255)
  equipment   equipment[]
  user        user        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model inventory {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  equipment_id  String    @db.Uuid
  supplier_id   String    @db.Uuid
  quantity      Int
  purchase_date DateTime  @db.Date
  expiry_date   DateTime? @db.Date
  created_at    DateTime  @default(now()) @db.Timestamp(6)
  updated_at    DateTime  @default(now()) @db.Timestamp(6)
  equipment     equipment @relation(fields: [equipment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  supplier      supplier  @relation(fields: [supplier_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model supplier {
  id             String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String      @db.VarChar(255)
  contact_person String      @db.VarChar(255)
  contact_number String      @db.VarChar(255)
  email_address  String      @db.VarChar(255)
  address        String      @db.VarChar(255)
  created_at     DateTime    @default(now()) @db.Timestamp(6)
  updated_at     DateTime    @default(now()) @db.Timestamp(6)
  inventory      inventory[]
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  hospital    hospital[]
}
